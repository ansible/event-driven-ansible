# Recommended usage of this file is detailed in https://github.com/ansible/eda-partner-testing/blob/main/README.md.
# The linter paths can be changed, but may result in false passes.
# {posargs} in this case would be the path to collection root relative from the .github/workflows dir (`../..`)
# cspell: ignore TOXPYTHON setenv passenv REQPASS PYTHONPYCACHEPREFIX PYTHONIOENCODING PYTHONBREAKPOINT

[tox]
envlist = lint, darglint, py, integration
skipsdist = true # this repo is not a python package
isolated_build = true
requires =
  tox >= 4.6.3
  setuptools >= 65.3.0 # editable installs

[testenv]
description = Run sanity and unit tests
basepython =
  py39: {env:TOXPYTHON:python3.9}
  py310: {env:TOXPYTHON:python3.10}
deps = -r test_requirements.txt
commands_pre =
  bash -c 'test "$(basename $(cd ../.. && pwd))" == ansible_collections || { echo "Repository must be cloned inside a directory structure like ansible_collections/ansible/eda in order allow ansible-test to run."; exit 3;}'
commands =
  ansible-test sanity
  ansible-test units --venv -v --num-workers 1
allowlist_externals =
  bash
isolated_build = true
;   # See https://stackoverflow.com/a/76884052/99834
;   py310: true
setenv =
    PIP_NO_BUILD_ISOLATION = 1
passenv =
  CURL_CA_BUNDLE  # https proxies, https://github.com/tox-dev/tox/issues/1437
  FORCE_COLOR
  HOME
  NO_COLOR
  PYTEST_*  # allows developer to define their own preferences
  PYTEST_REQPASS  # needed for CI
  PYTHON*  # PYTHONPYCACHEPREFIX, PYTHONIOENCODING, PYTHONBREAKPOINT,...
  PY_COLORS
  RTD_TOKEN
  REQUESTS_CA_BUNDLE  # https proxies
  SETUPTOOLS_SCM_DEBUG
  SSL_CERT_FILE  # https proxies
  SSH_AUTH_SOCK # may be needed by git
  LANG
  LC_*
# https://tox.wiki/en/latest/upgrading.html#editable-mode
package = editable

[testenv:lint]
deps = pre-commit
description = Run linters
commands = pre-commit run -a

[testenv:darglint]
deps = darglint
commands = darglint -s numpy -z full extensions/eda/plugins

[testenv:integration]
deps = -r test_requirements.txt
description = Run integration tests
commands =
  pytest tests/integration -vvv -s
