---
- name: Include OS specific vars
  ansible.builtin.include_vars:
    file: "{{ ansible_os_family }}.yml"

- name: Include RHEL8 override vars
  ansible.builtin.include_vars:
    file: RedHat-8.yml
  when:
    - ansible_distribution == "RedHat"
    - ansible_distribution_major_version == "8"

- name: Ensure dependencies are installed
  become: "{{ 'false' if ansible_distribution == 'MacOSX' else 'true' }}"
  ansible.builtin.package:
    name: "{{ package_list }}"

- name: Set required facts
  ansible.builtin.set_fact:
    _shell: "{{ ansible_user_shell | basename }}"

- name: Include MacOSX specific tasks
  ansible.builtin.include_tasks: tasks_macosx.yml
  when: ansible_distribution == "MacOSX"

- name: Set JAVA_HOME env var
  when: _shell != ""
  ansible.builtin.lineinfile:
    path: "~/.{{ _shell }}rc"
    regexp: "^(export )*JAVA_HOME"
    line: "export JAVA_HOME={{ java_home_path }}"
    mode: "0660"
    create: true

- name: Upgrade pip and wheel
  become: true
  ansible.builtin.pip:
    name:
      - pip
      - wheel
    state: latest # noqa package-latest

- name: Ensure ansible dependencies
  ansible.builtin.pip:
    name:
      - ansible
      - ansible-runner
    state: present

- name: Install ansible-rulebook
  environment:
    PIP_NO_BINARY: jpy
    JAVA_HOME: "{{ java_home_path }}"
  ansible.builtin.pip:
    name: ansible-rulebook
    state: latest # noqa package-latest

- name: Install collections
  ansible.builtin.command: ansible-galaxy collection install ansible.eda community.general
  register: collection_install
  changed_when: collection_install.rc != 0
  failed_when: collection_install.rc != 0
