---
- name: Ensure system dependencies
  ansible.builtin.package:
    name:
      - git
      - "python@3.10"
      - "openjdk@17"
      - maven
      - gcc

- name: Register openjdk@17 path
  ansible.builtin.command: brew --prefix openjdk@17
  register: brew_jdk
  changed_when: brew_jdk.rc != 0
  failed_when: brew_jdk.rc != 0

- name: Creating a symlink
  ansible.builtin.file:
    src: "{{ brew_jdk.stdout_lines[0] }}/libexec/openjdk.jdk"
    dest: "/Library/Java/JavaVirtualMachines/openjdk-17.jdk"
    state: link
  become: true

- name: Register java_home
  ansible.builtin.command: /usr/libexec/java_home
  register: java_home
  changed_when: java_home.rc != 0
  failed_when: java_home.rc != 0

- name: set user envvars
  ansible.builtin.lineinfile:
    path: "~/.zprofile"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    mode: "0660"
    create: true
  loop:
    - regexp: "^JAVA_HOME"
      line: "JAVA_HOME={{ java_home.stdout_lines[0] }}"
    - regexp: "^CPPFLAGS"
      line: CPPFLAGS="-I{{ brew_jdk.stdout_lines[0] }}/include"

- name: Upgrade pip
  ansible.builtin.pip:
    name:
      - pip
    state: latest  # noqa package-latest

- name: Install pip dependencies
  ansible.builtin.pip:
    name:
      - ansible
      - ansible-runner
      - wheel
    state: latest  # noqa package-latest

- name: Install ansible-rulebook
  environment:
    PIP_NO_BINARY: jpy
    JAVA_HOME: "{{ java_home.stdout_lines[0] }}"
  ansible.builtin.pip:
    name: ansible-rulebook
    state: forcereinstall

- name: Install collections
  ansible.builtin.command: ansible-galaxy collection install community.general ansible.eda --ignore-certs
  register: collection_install
  changed_when: collection_install.rc != 0
  failed_when: collection_install.rc != 0
