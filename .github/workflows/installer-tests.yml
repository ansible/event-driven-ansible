name: Tests for ansible-rulebook installer

on:
  pull_request:
    branches: ["main"]
    paths:
      - 'roles/install_ansible_rulebook/**'
      - 'playbooks/install_rulebook_cli.yml'

jobs:
  cli-installer-tests:
    strategy:
      matrix:
        os:
          - macos-latest
          - macos-11
        include:
          - os: ubuntu-latest
            container: quay.io/ansible/fedora35-test-container:3.2.0
            python-version: "3.10"
          - os: ubuntu-latest
            container: quay.io/ansible/fedora36-test-container:4.8.0
            python-version: "3.10"
          - os: ubuntu-latest
            container: quay.io/ansible/ubuntu2204-test-container:4.8.0
            python-version: "3.10"
          - os: ubuntu-latest
            container: docker.io/archlinux:latest
            pkg_install_cmd: pacman -Sy && pacman -S --noconfirm python python-pip python-setuptools
            ansible_playbook: true
          - os: ubuntu-latest
            container: docker.io/debian:latest
            pkg_install_cmd: apt update && apt install -y init python3 python3-pip python3-setuptools
            ansible_playbook: true
          - os: ubuntu-latest
            container: registry.access.redhat.com/ubi8:latest
            pkg_install_cmd: dnf install -y python39 python39-devel
            ansible_playbook: true
          - os: ubuntu-latest
            container: registry.access.redhat.com/ubi9:latest
            pkg_install_cmd: dnf install -y python3 python3-devel
            ansible_playbook: true
        python-version:
          - "3.10"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          path: ansible_collections/ansible/eda

      - name: Set up Python ${{ matrix.python-version }}
        if: matrix.ansible_playbook == false 
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ansible
        if: matrix.ansible_playbook == false 
        run: python3 -m pip install ansible

      - name: Install collection
        if: matrix.ansible_playbook == false 
        run: ansible-galaxy collection install .
        working-directory: ansible_collections/ansible/eda

      - name: Run ansible-test integration test
        if: matrix.ansible_playbook == false 
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            ansible-test integration --docker ${{ matrix.container }} --python ${{ matrix.python-version }} -v
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            ansible-test integration --local -v
          fi
        working-directory: ansible_collections/ansible/eda
        env:
          ANSIBLE_TEST_PREFER_PODMAN: 1

      - name: Run ansible-playbook test
        if: matrix.ansible_playbook == true
        run: |
          podman run -v .:/eda ${{ matrix.container }} bash -c '${{ matrix.pkg_install_cmd }} \
          && python3 -m pip install ansible && ansible-galaxy collection install /eda \
          && ansible-playbook -i localhost, -c local \
          -e eda_collection_pkg_name="git+https://github.com/ansible/event-driven-ansible" \
          ansible.eda.install_rulebook_cli \
          -v && ansible-rulebook -h'
        working-directory: ansible_collections/ansible/eda
